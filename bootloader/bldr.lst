JWasm v2.11, Oct 20 2013
bldr.asm
                                .model tiny
                                .386
                                .code
                                org 7c00h			; code here starts at offset 7c00h

00007C00                        main proc
00007C00  8CC8                  	mov ax, cs
00007C02  8ED0                  	mov ss, ax
                                	;mov sp, 0
00007C04  8ED8                  	mov ds, ax
00007C06  BA327C                	mov dx, offset mystring
00007C09  E83900                	call print_line
00007C0C  B402                  	mov ah, 02h
00007C0E  B500                  	mov ch, 0
00007C10  B102                  	mov cl, 2
00007C12  B028                  	mov al, 40
                                	
00007C14  BA0000                	mov dx, 0000h
00007C17  8EC2                  	mov es, dx
00007C19  B600                  	mov dh, 0
00007C1B  B200                  	mov dl, 0
00007C1D  BB0008                	mov bx, 0800h
                                	
00007C20  CD13                  	int 13h
                                	; if CF flag is set, print error
                                	
00007C22  7306                  	jnc happy
00007C24  BA3F7C                	mov dx, offset errmsg
00007C27  E81B00                	call print_line
00007C2A                        happy:
                                	
                                	
                                	
00007C2A  680008                	pushw 0800h
00007C2D  6A00                  	pushw 0000h
00007C2F  CB                    	retf
00007C30  EB35                  jmp Past_it_all
00007C32                        main endp



00007C32  426F6F74696E672E2E    mystring byte "Booting...", 0dh, 0ah, 0
00007C3F  4F6F70732100          errmsg byte "Oops!", 0

                                ; Function: Prints the ASCII string of a byte array, plus a newline (\r\n), to the screen in green via BIOS
                                ; Receives: DX
                                ; Requires: Nothing
                                ;  Returns: Nothing
                                ; Clobbers: Nothing
00007C45                        print_line proc
00007C45  60                    	pusha

00007C46  BE0000                	mov si, 0

00007C49  8BDA                  	mov bx, dx

00007C4B                        	printloop:
00007C4B  8A00                  		mov al, [bx + si] ; put the next piece of the array into AL
00007C4D  3C00                  		cmp al, 0
00007C4F  740B                  		jz endprint
00007C51  B40E                  		mov ah, 0Eh   ; 0Eh in BIOS means print character 
00007C53  53                    		push bx
00007C54  B302                  		mov bl, 0010b ; Set foreground color to green
00007C56  CD10                  		int 10h		  ; BIOS interrupt
00007C58  5B                    		pop bx
00007C59  46                    		inc si
00007C5A  EBEF                  		jmp printloop
00007C5C                        	endprint:
00007C5C  B80D0E                		mov  ax, 0e0dh
00007C5F  CD10                  		int  10h
00007C61  B00A                  		mov  al, 0ah
00007C63  CD10                  		int  10h
00007C65  61                    		popa
00007C66                        		ret
00007C67                        print_line endp

00007C67                        Past_it_all:
                                	
                                ;org main+510
                                ;	byte 055h, 0aah
                                	
                                end main


Macros:

                N a m e                 Type

@CatStr  . . . . . . . . . . . .        Func
@Environ . . . . . . . . . . . .        Func
@InStr . . . . . . . . . . . . .        Func
@SizeStr . . . . . . . . . . . .        Func
@SubStr  . . . . . . . . . . . .        Func


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

$$SYMBOLS  . . . . . . . . . . .        32 Bit   000000E8 Byte    Private 'DEBSYM'
$$TYPES  . . . . . . . . . . . .        32 Bit   00000048 Byte    Private 'DEBTYP'
DGROUP . . . . . . . . . . . . .        GROUP
_TEXT  . . . . . . . . . . . . .        16 Bit   7C67     Word    Public  'CODE'
_DATA  . . . . . . . . . . . . .        16 Bit   0000     Word    Public  'DATA'


Procedures, parameters and locals:

                N a m e                 Type     Value    Segment  Length

main . . . . . . . . . . . . . .        P Near   7C00     _TEXT    0032 Private  
print_line . . . . . . . . . . .        P Near   7C45     _TEXT    0022 Private  


Symbols:

                N a m e                 Type       Value     Attr

@CodeSize  . . . . . . . . . . .        Number             0h 
@DataSize  . . . . . . . . . . .        Number             0h 
@Interface . . . . . . . . . . .        Number             0h 
@Model . . . . . . . . . . . . .        Number             1h 
@code  . . . . . . . . . . . . .        Text   _TEXT
@data  . . . . . . . . . . . . .        Text   DGROUP
@stack . . . . . . . . . . . . .        Text   DGROUP
Past_it_all  . . . . . . . . . .        L Near          7C67h _TEXT 
endprint . . . . . . . . . . . .        L Near          7C5Ch _TEXT 
errmsg . . . . . . . . . . . . .        Byte[6]         7C3Fh _TEXT 
happy  . . . . . . . . . . . . .        L Near          7C2Ah _TEXT 
mystring . . . . . . . . . . . .        Byte[13]        7C32h _TEXT 
printloop  . . . . . . . . . . .        L Near          7C4Bh _TEXT 

bldr.asm: 82 lines, 2 passes, 0 ms, 0 warnings, 0 errors
