JWasm v2.11, Oct 20 2013
bldr.asm
                                ;include irvine16.inc
                                .model tiny
                                .386
                                .code
                                org 7c00h			; code here starts at offset 7c00h

00007C00                        main proc
00007C00  8CC8                  	mov ax, cs
00007C02  8ED0                  	mov ss, ax
00007C04  8ED8                  	mov ds, ax
00007C06  BA227C                	mov dx, offset mystring
00007C09  E82300                	call print_string
00007C0C  B402                  	mov ah, 02
00007C0E  B500                  	mov ch, 0
00007C10  B102                  	mov cl, 2
00007C12  B600                  	mov dh, 0
00007C14  B200                  	mov dl, 0
00007C16  B027                  	mov al, 39
                                	
                                	;mov es, ax
                                	
00007C18  CD13                  	int 13h
                                	
00007C1A  680008                	pushw 0800h
00007C1D  6A00                  	pushw 0000h
00007C1F  CB                    	retf

00007C20                        main endp

00007C20  EB24                  jmp Past_it_all

00007C22  426F6F74696E672E2E    mystring byte "Booting...", 0dh, 0ah, 0

                                ; Function: Prints out a null-terminated string to the screen
                                ; Receives: bx register (which must hold "mystring" stored in memory)
                                ;  Returns: A null-terminated string displayed on the string
                                ; Requires: nothing
                                ; Clobbers: nothing
00007C2F                        print_string proc	
00007C2F  60                    	pusha
00007C30  BA227C                	mov dx, offset mystring

00007C33  8BDA                  	mov bx, dx
                                	
00007C35                        L1:							;Loop through each character of string	
00007C35  3C00                  	cmp al, 0 				;Check to see if character is null-terminator
00007C37  7502                  	jne outputString
00007C39  7409                  	je endloop
00007C3B                        outputString:
00007C3B  8A07                  	mov al, [bx]	
00007C3D  B40E                  	mov ah, 0eh				;output the character of the string
00007C3F  CD10                  	int 10h
00007C41  43                    	inc bx					;increment bx register to next character in string

00007C42  EBF1                  jmp L1

00007C44                        	endloop:
00007C44  61                    	popa
00007C45                        	ret
00007C46                        print_string endp

00007C46                        Past_it_all:
                                	
                                org main+510
00007DFE  55AA                  	byte 055h, 0aah
                                	
                                end main


Macros:

                N a m e                 Type

@CatStr  . . . . . . . . . . . .        Func
@Environ . . . . . . . . . . . .        Func
@InStr . . . . . . . . . . . . .        Func
@SizeStr . . . . . . . . . . . .        Func
@SubStr  . . . . . . . . . . . .        Func


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .        GROUP
_TEXT  . . . . . . . . . . . . .        16 Bit   7E00     Word    Public  'CODE'
_DATA  . . . . . . . . . . . . .        16 Bit   0000     Word    Public  'DATA'


Procedures, parameters and locals:

                N a m e                 Type     Value    Segment  Length

main . . . . . . . . . . . . . .        P Near   7C00     _TEXT    0020 Public   
print_string . . . . . . . . . .        P Near   7C2F     _TEXT    0017 Public   
  outputString . . . . . . . . .        L Near   7C3B     _TEXT
  endloop  . . . . . . . . . . .        L Near   7C44     _TEXT
  L1 . . . . . . . . . . . . . .        L Near   7C35     _TEXT


Symbols:

                N a m e                 Type       Value     Attr

@CodeSize  . . . . . . . . . . .        Number             0h 
@DataSize  . . . . . . . . . . .        Number             0h 
@Interface . . . . . . . . . . .        Number             0h 
@Model . . . . . . . . . . . . .        Number             1h 
@code  . . . . . . . . . . . . .        Text   _TEXT
@data  . . . . . . . . . . . . .        Text   DGROUP
@stack . . . . . . . . . . . . .        Text   DGROUP
Past_it_all  . . . . . . . . . .        L Near          7C46h _TEXT 
mystring . . . . . . . . . . . .        Byte[13]        7C22h _TEXT 

bldr.asm: 67 lines, 2 passes, 0 ms, 0 warnings, 0 errors
